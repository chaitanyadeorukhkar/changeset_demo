name: Version
"on":
  push:
    branches:
      - master
env:
  GITHUB_ACCESS_TOKEN: ${{ secrets.CI_BOT_TOKEN }}
jobs:
  version:
    name: Version Update
    runs-on: macos-10.15
    steps:
      - name: Checkout Codebase
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.CI_BOT_TOKEN }}
      - name: Setup Node v14
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Set yarn cache directory path
        id: yarn-cache-dir-path
        run: 'echo "::set-output name=dir::$(yarn cache dir)"'
      - name: Cache NPM dependencies
        uses: actions/cache@v1
        with:
          path: "${{ steps.yarn-cache-dir-path.outputs.dir }}"
          key: "${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}"
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
      - name: Cache Ruby dependencies
        uses: actions/cache@v1
        with:
          path: ~/.bundle
          key: "${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}"
          restore-keys: |
            ${{ runner.os }}-gem-
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1.58.1
        with:
          ruby-version: "2.7"
      - name: Setup Fastlane
        run: bundle install
      - name: Create Version Update Pull Request
        id: changesets
        uses: changesets/action@master
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          version: yarn version-update
          commit: "build: update version"
          title: "build: update version"
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, 'build: update version') && github.event.head_commit.author.name == 'github-actions[bot]'"
    steps:
      - name: Checkout Codebase
        uses: actions/checkout@v2
        with:
          token: "${{ secrets.CI_BOT_TOKEN }}"
      - name: Setup Node v14
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Set yarn cache directory path
        id: yarn-cache-dir-path
        run: 'echo "::set-output name=dir::$(yarn cache dir)"'
      - name: Cache NPM dependencies
        uses: actions/cache@v1
        with:
          path: "${{ steps.yarn-cache-dir-path.outputs.dir }}"
          key: "${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}"
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
      - name: Run release script
        run: npx @razorpay/universe-cli release
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
